plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.gms.oss-licenses-plugin'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'io.github.lee0701.gukhanwiki.android'
    compileSdk 34

    defaultConfig {
        applicationId "io.github.lee0701.gukhanwiki.android"
        minSdk 16
        targetSdk 34
        versionCode 21
        versionName "0.0.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        defaultConfig.resValue("string", "app_version_name", "${versionName}")
    }

    flavorDimensions "server"
    productFlavors {
        development {
            dimension "server"
            buildConfigField 'String', 'API_PROTOCOL', "\"https\""
            buildConfigField 'String', 'API_HOST', "\"${properties.getProperty("api.host")}\""
            buildConfigField 'String', 'REST_BASE_PATH', "\"${properties.getProperty("api.rest-base-path")}\""
            buildConfigField 'String', 'ACTION_BASE_PATH', "\"${properties.getProperty("api.action-base-path")}\""
            buildConfigField 'String', 'SEONBI_BASE_PATH', "\"${properties.getProperty("api.seonbi-base-path")}\""
            buildConfigField 'String', 'DOC_PATH', "\"${properties.getProperty("api.doc-path")}\""
            manifestPlaceholders = [
                    hostName: "${properties.getProperty("api.host")}",
                    altHostName: "${properties.getProperty("api.host")}",
            ]
            resValue("bool", "altHostEnabled", "false")
        }
        production {
            dimension "server"
            buildConfigField 'String', 'API_PROTOCOL', "\"https\""
            buildConfigField 'String', 'API_HOST', '"wiki.xn--9cs231j0ji.xn--p8s937b.net"'
            buildConfigField 'String', 'REST_BASE_PATH', "\"/rest.php/v1/\""
            buildConfigField 'String', 'ACTION_BASE_PATH', "\"/api.php/\""
            buildConfigField 'String', 'SEONBI_BASE_PATH', "\"/seonbi/\""
            buildConfigField 'String', 'DOC_PATH', "\"/wiki/\""
            manifestPlaceholders = [
                    hostName: "wiki.xn--9cs231j0ji.xn--p8s937b.net",
                    altHostName: "wiki.韓國語.漢字.net",
            ]
            resValue("bool", "altHostEnabled", "true")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {
    implementation libs.androidx.multidex
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.flexbox
    implementation libs.androidx.preference.ktx
    implementation libs.androidx.swiperefreshlayout
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.android.spinkit
    implementation libs.play.services.oss.licenses
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.converter.scalars
    implementation libs.okhttp.urlconnection
    implementation libs.jsoup
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}

tasks.register('printVersionCode') {
    println android.defaultConfig.versionCode
}

tasks.register('printVersionName') {
    println android.defaultConfig.versionName
}
